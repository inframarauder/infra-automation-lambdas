## SAM template to deploy the python code as a lambda function cron job
Transform: "AWS::Serverless-2016-10-31"
Description: "Lambda functions to automate various tasks in my personal infrastructure"
Resources:
  TerraformCloudDestroyLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: terraform-cloud-destroy
      Description: "Lambda function to run as cron job and destroy the resources created by Terraform with Terraform Cloud as backend"
      Handler: main.handler
      Runtime: python3.11
      CodeUri: src/terraform-cloud-destroy
      MemorySize: 256
      Timeout: 900
      Environment:
        Variables:
          TF_ORGANIZATION: !Ref TfCloudOrg
          TF_API_KEY: !Ref TfCloudApiKey
          TF_API_URL: !Ref TfCloudApiUrl
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 0 * * ? *) # Run the lambda function every day at 00:00 UTC

  AWSCleanupLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: aws-cleanup
      Description: "Lambda function to run as cron job and cleanup AWS Resources using boto3"
      Handler: main.handler
      Runtime: python3.11
      CodeUri: src/aws-cleanup
      MemorySize: 256
      Timeout: 900
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSCleanupLambdaPolicy
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 1 * * ? *) # Run the lambda function every day at 1.00 UTC

  AWSCleanupLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AWSCleanupLambdaPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ec2:DescribeInstances
              - ec2:TerminateInstances
              - ec2:DescribeVolumes
              - ec2:DeleteVolume
              - ec2:DescribeSnapshots
              - ec2:DeleteSnapshot
              - eks:ListClusters
              - eks:DeleteCluster
              - eks:DescribeCluster
              - ecs:ListClusters
              - ecs:DeleteCluster
              - ecs:DescribeCluster
            Resource: "*"

Parameters:
  TfCloudOrg:
    Type: String
    Description: "Terraform Cloud Organization"
  TfCloudApiKey:
    Type: String
    Description: "Terraform Cloud API Key"
  TfCloudApiUrl:
    Type: String
    Description: "Terraform Cloud API URL"
